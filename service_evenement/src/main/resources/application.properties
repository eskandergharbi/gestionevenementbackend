spring.application.name=service_evenement
spring.data.mongodb.uri=mongodb://localhost:27017/event-service
server.port=8081
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0
# Actuator Prometheus Endpoint
management.endpoints.web.exposure.include= prometheus
# Enregistrer ce service auprès d\u2019Eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.enabled=true
# Prometheus
management.endpoints.web.exposure.include=prometheus,health,info

# Pour visualiser les logs avec traceId / spanId
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
spring.security.oauth2.client.registration.keycloak.client-id=bsn
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/book-social-network
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs