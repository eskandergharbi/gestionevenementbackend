version: '3.8'
services:
  ressource-service:
    container_name: ressource-service
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: ressource-service
      MYSQL_ROOT_PASSWORD: mysql
    ports:
      - "3307:3306"
    volumes:
      - ./mysql-resource-data:/var/lib/mysql

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    restart: always

  communication-service:
    container_name: communication-service
    image: microservices-tutorial/communication-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-communication:3306/communication-service
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=mysql
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    depends_on:
      - mysql-communication
      - rabbitmq
      - broker
      - zipkin
      - discovery-server
      - api-gateway

  mysql-communication:
    image: mysql:8
    container_name: mysql-communication
    restart: always
    ports:
      - "3310:3306"
    environment:
      MYSQL_DATABASE: communication-service
      MYSQL_ROOT_PASSWORD: mysql
    volumes:
      - ./mysql-communication:/var/lib/mysql

  mysql-job-s:
    container_name: mysql-job-s
    image: mysql:8
    restart: always
    ports:
      - "3309:3306"
    environment:
      MYSQL_DATABASE: job_s
      MYSQL_ROOT_PASSWORD: mysql
    volumes:
      - ./mysql-job-s:/var/lib/mysql

  mongo:
    container_name: mongo
    image: mongo:4.4.14-rc0-focal
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-data:/data/db

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "notification-topic:1:1"

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  discovery-server:
    image: microservices-tutorial/discovery-server:latest
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin

  api-gateway:
    image: microservices-tutorial/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8181:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - zipkin
      - discovery-server

  service_evenement:
    container_name: service_evenement
    image: microservices-tutorial/service_evenement:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo
      - discovery-server
      - api-gateway

  service_resource:
    container_name: service_resource
    image: microservices-tutorial/service_resource:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://ressource-service:3306/ressource-service
    depends_on:
      - ressource-service
      - discovery-server
      - api-gateway

  service_notification:
    container_name: service_notification
    image: microservices-tutorial/service_notification:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - broker
      - discovery-server
      - api-gateway

  service_participant:
    container_name: service_participant
    image: microservices-tutorial/service_participant:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-job-s:3306/job_s
    depends_on:
      - mysql-job-s
      - mongo
      - zipkin
      - broker
      - discovery-server
      - api-gateway

  prometheus:
    image: prom/prometheus:v2.37.1
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - service_evenement
      - service_notification
      - service_participant
      - service_resource
      - communication-service

  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    links:
      - prometheus:prometheus
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
